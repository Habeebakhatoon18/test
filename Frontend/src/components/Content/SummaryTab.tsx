import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import axios from 'axios';
import { BookOpen, AlertCircle, CheckCircle } from 'lucide-react';

interface SummaryResponse {
  success: boolean;
  summary: string;
}

interface SummaryTabProps {
  videoId: string;
}

export function SummaryTab({ videoId }: SummaryTabProps) {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [summary, setSummary] = useState<string | null>(null);
  
  useEffect(() => {
   const API_BASE_URL = import.meta.env.VITE_BASE_URL;

    const fetchSummary = async () => {
      try {
        setLoading(true);
        setError(null);
        const response = await axios.post<SummaryResponse>(
          `${API_BASE_URL}/summary`,
          { videoId }
        );
        if (response.data.success) {
          setSummary(response.data.summary);
        } else {
          throw new Error('Summary request unsuccessful');
        }
      } catch (err) {
        console.error('Error fetching summary:', err);
        setError('Failed to load summary. Please try again later.');
      } finally {
        setLoading(false);
      }
    };

    fetchSummary();
  }, [videoId]);

  const paragraphs = summary?.split('\n\n') || [];

  if (loading) {
    return (
      <div className="flex flex-col items-center justify-center py-16 px-4">
        <div className="w-16 h-16 border-4 border-purple-600 border-t-transparent rounded-full animate-spin mb-4"></div>
        <p className="text-indigo-300 text-lg">Generating summary...</p>
      </div>
    );
  }

  if (error) {
    return (
      <motion.div 
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        className="bg-red-900/20 border border-red-700/50 rounded-xl p-6 my-6"
      >
        <div className="flex items-center gap-3 mb-3">
          <AlertCircle className="w-6 h-6 text-red-400" />
          <h3 className="text-xl font-semibold text-red-300">Error</h3>
        </div>
        <p className="text-red-200">{error}</p>
      </motion.div>
    );
  }

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="space-y-6 py-4"
    >
      <motion.div 
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.2 }}
        className="bg-gradient-to-br from-indigo-900 via-purple-900 to-indigo-900 rounded-xl shadow-lg p-6 border border-indigo-700/50"
      >
        <div className="flex items-center gap-3 mb-4">
          <div className="flex h-10 w-10 items-center justify-center rounded-full bg-purple-700/30">
            <BookOpen className="w-5 h-5 text-purple-300" />
          </div>
          <h2 className="text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-pink-300 to-purple-300">
            Video Summary
          </h2>
        </div>
        
        <div className="mb-3 flex items-center gap-2 text-green-400">
          <CheckCircle className="w-5 h-5" />
          <span className="text-sm font-medium">AI-Generated Summary</span>
        </div>

        <div className="prose prose-invert max-w-none">
          {paragraphs.map((paragraph, index) => (
            <motion.p 
              key={index}
              initial={{ opacity: 0, y: 10 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.3 + index * 0.1 }}
              className="mb-4 text-indigo-200 leading-relaxed"
            >
              {paragraph}
            </motion.p>
          ))}
        </div>

        <div className="mt-6 pt-4 border-t border-indigo-800/50">
          <p className="text-indigo-400 text-sm">
            This summary was generated by AI based on the video content and may not capture every detail.
          </p>
        </div>
      </motion.div>
    </motion.div>
  );
}